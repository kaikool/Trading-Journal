name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Cache npm dependencies
      uses: actions/cache@v4
      id: npm-cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-
    
    - name: Install dependencies
      run: npm ci ${{ steps.npm-cache.outputs.cache-hit != 'true' && '--no-audit' || '' }}
    
    - name: Run type check
      run: bash scripts/check.sh
    
    - name: Generate Config
      run: |
        cat > public/config.js << 'EOL'
        /**
         * Configuration for production environment
         * Generated by GitHub Actions deployment workflow
         */
        
        window.ENV = {
          // Firebase configuration
          VITE_FIREBASE_PROJECT_ID: "${{ secrets.VITE_FIREBASE_PROJECT_ID }}",
          VITE_FIREBASE_API_KEY: "${{ secrets.VITE_FIREBASE_API_KEY }}",
          VITE_FIREBASE_APP_ID: "${{ secrets.VITE_FIREBASE_APP_ID }}",
          VITE_FIREBASE_MEASUREMENT_ID: "${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}",
          VITE_FIREBASE_MESSAGING_SENDER_ID: "${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}",
          VITE_FIREBASE_AUTH_DOMAIN: "${{ secrets.VITE_FIREBASE_PROJECT_ID }}.firebaseapp.com",
          
          // API Base URL
          VITE_API_BASE_URL: "",
          
          // TwelveData API key
          TWELVEDATA_API_KEY: "${{ secrets.TWELVEDATA_API_KEY }}"
        };
        EOL
        
        echo "Config file created successfully!"
        cat public/config.js
      
    - name: Build application
      run: |
        npm run build
        # Copy public directory files to dist/public
        mkdir -p dist/public
        cp -r public/* dist/public/
        echo "Copied public directory files to dist/public"
        ls -la dist/public
      env:
        VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
        VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}.firebaseapp.com
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        TWELVEDATA_API_KEY: ${{ secrets.TWELVEDATA_API_KEY }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 1

  deploy-firebase:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    - name: Cache Firebase CLI
      uses: actions/cache@v4
      id: firebase-cache
      with:
        path: ~/.npm/firebase-tools
        key: ${{ runner.os }}-firebase-tools-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-firebase-tools-
    
    - name: Install Firebase CLI
      run: npm install -g firebase-tools ${{ steps.firebase-cache.outputs.cache-hit != 'true' && '--no-audit' || '' }}
    
    - name: Create Config in dist folder
      run: |
        cat > dist/config.js << 'EOL'
        /**
         * Configuration for production environment
         * Generated by GitHub Actions deployment workflow
         */
        
        window.ENV = {
          // Firebase configuration
          VITE_FIREBASE_PROJECT_ID: "${{ secrets.VITE_FIREBASE_PROJECT_ID }}",
          VITE_FIREBASE_API_KEY: "${{ secrets.VITE_FIREBASE_API_KEY }}",
          VITE_FIREBASE_APP_ID: "${{ secrets.VITE_FIREBASE_APP_ID }}",
          VITE_FIREBASE_MEASUREMENT_ID: "${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}",
          VITE_FIREBASE_MESSAGING_SENDER_ID: "${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}",
          VITE_FIREBASE_AUTH_DOMAIN: "${{ secrets.VITE_FIREBASE_PROJECT_ID }}.firebaseapp.com",
          
          // API Base URL
          VITE_API_BASE_URL: "",
          
          // TwelveData API key
          TWELVEDATA_API_KEY: "${{ secrets.TWELVEDATA_API_KEY }}",
          
          // Cloudinary configuration
          CLOUDINARY_CLOUD_NAME: "${{ secrets.CLOUDINARY_CLOUD_NAME }}",
          CLOUDINARY_API_KEY: "${{ secrets.CLOUDINARY_API_KEY }}",
          CLOUDINARY_API_SECRET: "${{ secrets.CLOUDINARY_API_SECRET }}"
        };
        EOL
        
        echo "Config file created successfully in dist folder!"
        cat dist/config.js
        
    - name: Prepare dist structure for Firebase
      run: |
        mkdir -p dist/public
        cp -r dist/* dist/public/ 2>/dev/null || :
        rm -rf dist/public/public || :
        
        # Verify structure
        echo "Dist folder structure prepared for Firebase deployment"
        ls -la dist
        ls -la dist/public
        
    # TwelveData API key được hardcoded trong market-price-service.ts
    # Không cần cấu hình Firebase Functions config nữa
        
    - name: Deploy to Firebase
      run: firebase deploy --only hosting --project ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}